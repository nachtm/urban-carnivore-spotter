{"version":3,"sources":["assets/Raccoon.svg","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","services/FilterService.js","store/reducers.js","store/index.js","store/constants.js","components/DesktopHeader.js","components/FilterCheckboxes.js","store/actions.js","services/ColorService.js","components/FilterDrawer.js","components/MobileHeader.js","components/Uploader.js","components/MediaUpload.js","components/FormMap.js","services/NeighborhoodService.js","components/Form.js","components/Footer.js","components/ListCard.js","components/ListView.js","components/ReportViewer.js","components/PointTooltip.js","components/MapView.js","components/NotFound.js","components/Main.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","dotenv","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","app","initializeApp","allCarnivores","allTimes","DATE_BOUNDS","name","early","late","insideTimeBounds","date","bounds","hour","getHours","getInitialFilter","allNeighborhoods","defaultCarnivoreFilter","all","forEach","carnivore","defaultNeighborhoodFilter","filter","hood","reduce","obj","neighborhood","defaultTimeFilter","time","carnivoreFilter","objectSpread","neighborhoodFilter","timeFilter","confidenceFilterActive","dataMatchesFilter","report","one","two","data","parsedDate","Date","timestamp","species","undefined","matchesOtherCarnivore","hasOwnProperty","getUTCFullYear","getUTCMonth","getUTCDate","some","insideAnyActiveTimeBounds","confidence","initialState","isMobile","store","createStore","state","action","type","value","defineProperty","filterName","key","newValue","keys","newDate","newFilter","window","__REDUX_DEVTOOLS_EXTENSION__","DesktopHeader","history","props","react_default","a","createElement","style","position","top","width","zIndex","AppBar_default","className","onClick","push","cursor","id","Component","withRouter","FilterCheckboxes","_this","possibleConstructorReturn","getPrototypeOf","call","getButton","itemKey","checked","disabled","onChange","classes","keyColorFunction","label","Place_default","color","index_es","control","checkedIcon","CheckboxIntermediateIcon_default","checkedCheckbox","checkbox","viewAll","_this2","_this$props","allLabel","briefNumber","updateValues","component","allContent","entries","_ref","_ref2","slicedToArray","slice","map","_ref3","_ref4","length","Fragment","in","_ref5","_ref6","_ref7","_ref8","setState","showAllButton","ExpandLess_default","ExpandMore_default","withStyles","margin","setMobile","dispatch","updateFilter","resetFilter","updateFilterDate","toggleFilterConfidence","speciesColorMap","Map","black bear","bobcat","coyote","cougar/mountain lion","raccoon","opossum","river otter","getColorForSpecies","get","toLowerCase","briefNeighborhoodsCount","FilterDrawer","updateFilterSubsection","subsectionName","toggleShow","groupName","handleDateChange","toggleConfidence","getCollapse","headerTitle","expand","child","expandHeader","expandButton","size","disableRipple","Remove_default","Add_default","collapsible","render","cancel","children","_this$props$filter","_this$state","showCarnivores","showNeighborhoods","showTime","showConfidence","header","mainContent","components_FilterCheckboxes","entry_default","variant","resultsButton","console","log","connect","height","overflow","display","flexDirection","alignItems","justifyContent","backgroundColor","filterBox","flex","bottom","left","boxShadow","float","alignText","textAlign","MobileHeader","right","toggleDrawer","side","open","location","marginLeft","pathname","Button_default","SwipeableDrawer_default","anchor","onClose","onOpen","tabIndex","role","filterContainer","components_FilterDrawer","Uploader","mediaPaths","handleChangeImage","e","files","target","getMedia","filesToStore","file","fileUploader","handleUploadError","error","handleUploadSuccess","_callee","filename","passPaths","regenerator_default","wrap","_context","prev","next","firebase","storage","ref","getDownloadURL","then","url","stop","acceptType","reference","react_firebase_file_uploader_lib_default","accept","multiple","randomizeFilename","storageRef","onUploadError","onUploadSuccess","instance","MediaUpload","dataFromChild","uploader","uploadMedia","getUploaderPaths","paths","getMediaPaths","Grid_default","container","root","spacing","item","xs","justify","Paper_default","CameraAlt_default","components_Uploader","PlayArrow_default","VolumeUp_default","theme","flexGrow","paper","border","padding","unit","ReactMapboxGl","accessToken","dragPan","FormMap","doNotPropagate","originalEvent","stopPropagation","preventDefault","onDragEnd","passMapCoordinates","lng","lngLat","lat","centerLng","centerLat","FormMap_Map","center","onTouchMove","lib_esm","paint","circle-color","circle-stroke-width","circle-stroke-opacity","circle-radius","coordinates","draggable","NeighborhoodService","getNeighborhoodFor","geocodingService","reverseGeocode","query","types","send","response","neighborhoods","body","features","text","mbxGeocoding","getAllNeighborhoods","axios","sort","addReportUrl","speciesLst","confidenceLevels","reactions","dogSizes","leashOptions","animalBehaviors","vocalizations","carnivoreResponses","conflictOptions","counts","THANKS_FOR_SUBMITTING","ERROR_ON_SUBMISSION","neighborhoodService","Form","mapLat","mapLng","animalFeatures","numberOfAdultSpecies","numberOfYoungSpecies","numberOfAdults","numberOfChildren","reaction","reactionDescription","numberOfDogs","dogSize","onLeash","animalBehavior","animalEating","vocalization","vocalizationDesc","carnivoreResponse","carnivoreConflict","conflictDesc","contactEmail","contactName","contactPhone","generalComments","media","thanksMessage","submitting","permissionOpen","componentDidMount","handleChange","event","getMapCoordinates","dataFromMap","handleSubmit","objectWithoutProperties","post","status","handleTimestampChange","setMedia","startUpload","handlePermissionResponse","agree","handleClose","handleDrawerState","fromDrawer","createRef","_this$state2","LoadingOverlay_default","active","spinner","lib","onError","errors","onSubmit","autoComplete","react_datepicker_es","selected","showTimeSelect","timeFormat","timeIntervals","dateFormat","timeCaption","components_FormMap","minWidth","validators","errorMessages","inputProps","idx","MenuItem_default","multiline","rows","maxLength","level","marginBottom","toString","behavior","required","whiteSpace","indexOf","components_MediaUpload","marginTop","select","option","Dialog_default","DialogContent_default","DialogContentText_default","DialogActions_default","Footer","drawerState","handleDrawer","innerWidth","Map_default","Fab_default","aria-label","Drawer_default","fab","Clear_default","components_Form","marginRight","Settings_default","list","fullList","extendedIcon","info","Card_default","CardContent_default","CardMedia_default","image","Typography_default","toUpperCase","concat","toDateString","getMinutes","timeToString","Link","to","ListView","reports","catch","components_ListCard","CircularProgress_default","ReportViewer","match","params","med","original","thumbnail","goBack","icons_index_es","image_gallery_default","items","showBullets","showIndex","showThumbnails","showVideo","paddingLeft","PointTooltip","src","Map2","getReports","MapView","viewport","zoom","popupInfo","onMoveEnd","getCenter","_this3","tipSize","onMouseLeave","components_PointTooltip","_this4","assign","renderPopup","oops","fontSize","transform","maxHeight","minHeight","raccoonMobile","button","background","alt","Main","Switch","Route","exact","path","components_MapView","NotFound","App","checkIfMobile","addEventListener","updateAllNeighborhoods","removeEventListener","components_MobileHeader","components_DesktopHeader","components_Main","components_Footer","ReactDOM","BrowserRouter","basename","es","context","Provider","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d1ab7dfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Raccoon.6dd94356.svg\";","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\n// Initialize Firebase\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\nexport default class Firebase {\n  constructor() {\n    app.initializeApp(config);\n  }\n}\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","const HIGH_CONFIDENCE = '100% confident';\nconst MEDIUM_CONFIDENCE = 'More than 75% confident';\n\nconst allCarnivores = ['Black Bear', 'Bobcat', 'Coyote', 'Cougar/Mountain Lion', 'Raccoon', 'Opossum', 'River Otter', 'Other'];\nconst allTimes = ['Early Morning (12:00am-4:59am)', 'Morning (5:00am-11:59am)', 'Afternoon (12:00pm-5:59pm)', 'Evening (6:00pm-11:59pm)'];\n\nconst DATE_BOUNDS = [\n    {\n        name: 'all',\n        early: 0,\n        late: 25\n    },\n    {\n        name: 'Early Morning (12:00am-4:59am)',\n        early: 0,\n        late: 5\n    },\n    {\n        name: 'Morning (5:00am-11:59am)', \n        early: 5,\n        late: 12\n    },\n    {\n        name: 'Afternoon (12:00pm-5:59pm)',\n        early: 12,\n        late: 18\n    },\n    {\n        name: 'Evening (6:00pm-11:59pm)',\n        early: 18,\n        late: 24\n    }\n];\n\n/**\n * Given two Date() objects, return true if they are on the same day, eg:\n *  12/21/2000 at noon and 12/21/2000 at 3pm return true, but\n *  12/21/2000 at noon and 12/22/2000 at noon return false\n */\nconst daysAreEqual = (one, two) => {\n    return one.getUTCFullYear() === two.getUTCFullYear() \n        && one.getUTCMonth() === two.getUTCMonth()\n        && one.getUTCDate() === two.getUTCDate();\n}\n\nconst insideAnyActiveTimeBounds = (date, filter) => {\n    const { timeFilter } = filter;\n    return DATE_BOUNDS.filter(bounds => timeFilter[bounds.name])\n        .some(bounds => insideTimeBounds(date, bounds));\n}\n\nconst insideTimeBounds = (date, bounds) => {\n    const hour = date.getHours();\n    return hour < bounds.late && hour >= bounds.early;\n}\n\nconst matchesOtherCarnivore = (filter, species) => {\n    const { carnivoreFilter } = filter;\n    return species === 'Other' || (carnivoreFilter['Other'] && carnivoreFilter[species] === undefined)\n}\n\nexport const getInitialFilter = (allNeighborhoods) => {\n    // Carnivore, neighborhood, and times defaults\n    const defaultCarnivoreFilter = {all: true};\n    allCarnivores.forEach(carnivore => defaultCarnivoreFilter[carnivore] = false);\n    const defaultNeighborhoodFilter = allNeighborhoods\n        .filter(hood => hood !== 'all')\n        .reduce((obj, neighborhood) => {\n            obj[neighborhood] = false;\n            return obj;\n        }, {all: true});\n    const defaultTimeFilter = {all: true};\n    allTimes.forEach(time => defaultTimeFilter[time] = false);\n\n    const initialFilter = {\n        carnivoreFilter: {...defaultCarnivoreFilter},\n        neighborhoodFilter: {...defaultNeighborhoodFilter},\n        date: null,\n        timeFilter: {...defaultTimeFilter},\n        confidenceFilterActive: false,\n    }\n    return initialFilter;\n}\n\n/**\n * Returns true if the report should be shown, given the filter\n */\nexport const dataMatchesFilter = (report, filter) => {\n    const { data } = report;\n    const parsedDate = new Date(data.timestamp);\n    // ok with species    \n    return (filter.carnivoreFilter.all || filter.carnivoreFilter[data.species] || matchesOtherCarnivore(filter, data.species)) &&\n    // ok with neighborhood\n    (filter.neighborhoodFilter.all === true || (data.hasOwnProperty('neighborhood') && filter.neighborhoodFilter[data.neighborhood] === true)) &&\n    // ok with date\n    (filter.date === null || daysAreEqual(filter.date, parsedDate)) &&\n    // ok with time\n    (filter.timeFilter.all || insideAnyActiveTimeBounds(parsedDate, filter)) &&\n    // ok with confidence\n    (!filter.confidenceFilterActive || data.confidence === HIGH_CONFIDENCE || data.confidence === MEDIUM_CONFIDENCE);\n}\n","import { SET_MOBILE, UPDATE_FILTER, UPDATE_FILTER_DATE, TOGGLE_FILTER_CONFIDENCE, RESET_FILTER, UPDATE_ALL_NEIGHBORHOODS } from './constants';\nimport { getInitialFilter } from '../services/FilterService';\n\nconst initialState = {\n    filter: getInitialFilter([]),\n    isMobile: false,\n}\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case SET_MOBILE:\n            return {...state, isMobile: action.value}\n        case UPDATE_FILTER:\n            return {...state, filter: {...state.filter,\n                [action.filterName]: {\n                    ...state.filter[action.filterName],\n                    [action.key]: action.newValue\n                }}\n            }\n        case RESET_FILTER:\n            const allNeighborhoods = Object.keys(state.filter.neighborhoodFilter);\n            return {...state, filter: getInitialFilter(allNeighborhoods)};\n        case UPDATE_FILTER_DATE:\n            return {...state, filter: {...state.filter,\n                date: action.newDate}\n            }\n        case TOGGLE_FILTER_CONFIDENCE:\n            return {...state, filter: {...state.filter,\n                confidenceFilterActive: !state.filter.confidenceFilterActive}\n            }\n        // When we update the list of all neighborhoods, the filter should contain\n        // all neighborhoods: false, plus an all: true.\n        case UPDATE_ALL_NEIGHBORHOODS:\n            const newFilter = action.value.reduce((obj, neighborhood) => {\n                obj[neighborhood] = false;\n                return obj;\n            }, {all: true});\n            return {...state,\n                filter: {...state.filter,\n                    neighborhoodFilter: newFilter\n                }}\n    }\n    return state;\n}\n\nexport {reducer, initialState};","import { createStore } from 'redux';\nimport { reducer, initialState } from './reducers';\n\n\nconst store = createStore(reducer, initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport {store};\n","const SET_MOBILE = 'SET_MOBILE';\nconst UPDATE_FILTER = 'UPDATE_FILTER';\nconst UPDATE_FILTER_DATE = 'UPDATE_FILTER_DATE';\nconst TOGGLE_FILTER_CONFIDENCE = 'TOGGLE_FILTER_CONFIDENCE';\nconst RESET_FILTER = 'RESET_FILTER';\nconst UPDATE_ALL_NEIGHBORHOODS = 'UPDATE_ALL_NEIGHBORHOODS'\nexport {SET_MOBILE, UPDATE_FILTER, RESET_FILTER, UPDATE_FILTER_DATE, TOGGLE_FILTER_CONFIDENCE, UPDATE_ALL_NEIGHBORHOODS}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\n\nimport '../App.css';\n\nclass DesktopHeader extends Component {\n\n  render() {\n    const { history } = this.props;\n\n    return (\n      <div style={{ position: 'sticky', top: 0, width: '100%', zIndex: 100 }}>\n        <AppBar position=\"static\" className=\"appBar\">\n          <div className=\"logo\"/>\n          <h1 className=\"headerTitle\" onClick={() => history.push('/')} style={{ cursor: 'pointer' }}>\n            Urban Carnivore Sightings\n          </h1>\n          <div className=\"nav\">\n            <div id=\"explore\" className=\"categories\" onClick={() => history.push('/')}><h4>Explore</h4></div>\n            <div id=\"resources\" className=\"categories\" onClick={() => history.push('/resources')}><h4>Resources</h4>\n            </div>\n            <div id=\"report\" className=\"categories\" onClick={() => history.push('/reports/create')}><h4>Report\n              Sightings</h4></div>\n          </div>\n\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nDesktopHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(DesktopHeader);\n","import React, {Component} from 'react';\nimport { FormControlLabel, FormGroup, FormControl, Checkbox, Button, Collapse } from '@material-ui/core';\nimport CheckBoxIntermediateIcon from 'mdi-react/CheckboxIntermediateIcon';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PlaceIcon from '@material-ui/icons/Place';\n\nconst styles = {\n    checkbox: {\n        margin: '0px 0px 0px 8px',\n    },\n    checkedCheckbox: {\n        color: '#93C838'\n    },\n    showAllButton: {\n        margin: 'auto'\n    },\n    allContent: {\n        width: '100%'\n    }\n}\n\nclass FilterCheckboxes extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            viewAll: false\n        };\n    }\n\n    getButton = (itemKey, checked, disabled, onChange, classes, keyColorFunction) => {\n        const label = keyColorFunction ? <span><PlaceIcon style={{color: keyColorFunction(itemKey)}}/>{itemKey}</span> : <span>{itemKey}</span>;\n        return <FormControlLabel key={itemKey}\n                    control={<Checkbox\n                        checkedIcon={<CheckBoxIntermediateIcon className={classes.checkedCheckbox}/>}\n                        checked={checked}\n                        onChange={onChange}\n                        disabled={disabled}\n                        className={classes.checkbox}/>} label={label}/>\n    }\n\n    render() {\n        const {allLabel, briefNumber, filter, updateValues, classes, keyColorFunction} = this.props;\n        const {viewAll} = this.state;\n        return <FormControl component=\"fieldset\" className={classes.allContent}>\n            <FormGroup>\n                <FormControlLabel\n                    control={<Checkbox checked={filter['all']}\n                                onChange={() => updateValues('all', !filter['all'])}\n                                checkedIcon={<CheckBoxIntermediateIcon className={classes.checkedCheckbox}/>}\n                                className={classes.checkbox}/>}\n                    label={allLabel} />\n                {Object.entries(filter)\n                    .filter(([key, value]) => key != 'all').slice(0, briefNumber).map(([itemKey, checked]) =>\n                    this.getButton(itemKey, checked, filter['all'], () => updateValues(itemKey, !checked), classes, keyColorFunction)\n                )}\n            </FormGroup>\n            {/* Button to display the rest. Subtracting 1 to account for the all button, which has a field in filter\n                but doesn't count towards the briefNumber total since it's rendered separately. */}\n            {briefNumber !== Object.keys(filter).length - 1 ?\n                <>\n                <Collapse in={viewAll}>\n                    <FormGroup>\n                        {Object.entries(filter).filter(([key, value]) => key != 'all').slice(briefNumber)\n                            .map(([itemKey, checked]) =>\n                                this.getButton(itemKey, checked, filter['all'], () => updateValues(itemKey, !checked), classes))}\n                    </FormGroup>\n                </Collapse>\n                <Button\n                    onClick={() => this.setState(state => ({...state, viewAll: !state.viewAll}))}\n                    className={classes.showAllButton}>\n                    {viewAll ? <>Hide Some <ExpandLessIcon/></> : <>Show All <ExpandMoreIcon/></>}</Button>\n                </>\n                : null}\n        </FormControl>\n    }\n}\n\nexport default withStyles(styles)(FilterCheckboxes)\n","import { SET_MOBILE, UPDATE_FILTER, UPDATE_FILTER_DATE, TOGGLE_FILTER_CONFIDENCE, RESET_FILTER, UPDATE_ALL_NEIGHBORHOODS } from './constants';\nimport {store} from './index';\n\nexport const setMobile = (value) => {\n    store.dispatch({\n        type: SET_MOBILE,\n        value\n    });\n}\n\nexport const updateFilter = (filterName, key, newValue) => {\n    store.dispatch({\n        type: UPDATE_FILTER,\n        filterName,\n        key,\n        newValue\n    });\n}\n\nexport const resetFilter = () => {\n    store.dispatch({\n        type: RESET_FILTER\n    });\n}\n\nexport const updateFilterDate = (newDate) => {\n    store.dispatch({\n        type: UPDATE_FILTER_DATE,\n        newDate\n    });\n}\n\nexport const toggleFilterConfidence = () => {\n    store.dispatch({\n        type: TOGGLE_FILTER_CONFIDENCE\n    });\n}\n\nexport const updateAllNeighborhoods = (allNeighborhoods) => {\n    store.dispatch({\n        type: UPDATE_ALL_NEIGHBORHOODS,\n        value: allNeighborhoods\n    })\n}\n","import { Map } from 'immutable';\n\nconst speciesColorMap = Map({'black bear':'#801e78','bobcat': '#498029','coyote': '#561480','cougar/mountain lion': '#802a00','raccoon': '#093c80','opossum': '#FFDC26','river otter': '#7083ff'});\n\nexport const getColorForSpecies = (species) => {\n    const color = speciesColorMap.get(species.toLowerCase());\n    return color ? color : '#805b14';\n}\n","import React from 'react';\nimport DatePicker from 'react-date-picker';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button, Collapse, Fab, FormControl, FormControlLabel, FormGroup, Checkbox} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport FilterCheckboxes from './FilterCheckboxes';\nimport CheckBoxIntermediateIcon from 'mdi-react/CheckboxIntermediateIcon'\nimport { connect } from 'react-redux';\nimport { updateFilter, updateFilterDate, toggleFilterConfidence, resetFilter } from '../store/actions'\nimport { getColorForSpecies } from '../services/ColorService';\n\nconst styles = {\n    allContent: {\n        height: '100%',\n        overflow: 'scroll',\n        position: 'static',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        position: 'sticky',\n        top: 0,\n        backgroundColor: 'white',\n        zIndex: 1\n    },\n    filterBox: {},\n    mainContent: {\n        flex: 1\n    },\n    resultsButton: {\n        position: 'sticky',\n        bottom: 4,\n        left: '5%',\n        width: '90%',\n        justifyContent: 'center',\n        color: 'white',\n        backgroundColor: '#93C838'\n    },\n    expandButton: {\n        boxShadow: 'none',\n        float: 'right',\n        position: 'relative',\n        top: -8,\n        backgroundColor: '#93C838',\n        color: 'white'\n    },\n    expandHeader: {\n        margin: 16,\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    headerTitle: {\n        alignText: 'left'\n    },\n    collapsible: {\n        textAlign: 'left'\n    }\n}\n\nconst briefNeighborhoodsCount = 5;\n\n/**\n * Takes in a header as a child component\n */\nclass FilterDrawer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // Initialize state\n        this.state = {\n            showCarnivores: false,\n            showNeighborhoods: false,\n            showTime: false,\n            showConfidence: false\n        }\n    }\n\n    updateFilterSubsection = subsectionName => (key, newValue) => {\n        updateFilter(subsectionName, key, newValue);\n    }\n\n    toggleShow = groupName => () => {\n        this.setState(state => ({...state,\n                [groupName]: !state[groupName]}));\n    }\n\n    handleDateChange = newDate => {\n        if (newDate) {\n            updateFilterDate(new Date(newDate));\n        }\n        else {\n            updateFilterDate(newDate);\n        }\n    }\n\n    toggleConfidence = () => {\n        toggleFilterConfidence();\n    }\n\n    getCollapse = (classes, headerTitle, onClick, expand, child) => {\n        return <>\n            <div className={classes.expandHeader}>\n                <span className={classes.headerTitle}>{headerTitle}</span>\n                <Fab\n                    className={classes.expandButton}\n                    onClick={onClick}\n                    size=\"small\"\n                    disableRipple={true}>\n                        {expand ? <RemoveIcon /> : <AddIcon />}\n                </Fab>\n            </div>\n            <Collapse in={expand} className={classes.collapsible}>\n                {child}\n            </Collapse>\n        </>\n    }\n\n    render = () => {\n        const {classes, cancel, children, filter: {date, confidenceFilterActive, carnivoreFilter, neighborhoodFilter, timeFilter}} = this.props;\n        const {showCarnivores, showNeighborhoods, showTime, showConfidence} = this.state;\n        return (\n            <div className={classes.allContent}>\n                {children}\n                <div className={classes.header}>\n                    {cancel && <Button onClick={cancel}>Cancel</Button> }\n                    <h3 style={{margin: 4}}>Filter</h3>\n                    <Button onClick={resetFilter}>Reset</Button>\n                </div>\n                <div className={classes.mainContent}>\n                    {/* Carnivores */}\n                    {this.getCollapse(classes, \"Type of Carnivore\", this.toggleShow('showCarnivores'), showCarnivores,\n                        <FilterCheckboxes\n                            filter={carnivoreFilter}\n                            allLabel=\"All Carnivores\"\n                            updateValues={this.updateFilterSubsection('carnivoreFilter')}\n                            briefNumber={Object.keys(carnivoreFilter).length - 1}\n                            keyColorFunction={getColorForSpecies}/>\n                    )}\n                    <hr/>\n\n                    {/* Neighborhoods */}\n                    {this.getCollapse(classes, \"Neighborhood\", this.toggleShow('showNeighborhoods'), showNeighborhoods,\n                        <FilterCheckboxes\n                            filter={neighborhoodFilter}\n                            allLabel=\"All Neighborhoods\"\n                            updateValues={this.updateFilterSubsection('neighborhoodFilter')}\n                            briefNumber={briefNeighborhoodsCount}/>\n                    )}\n                    <hr/>\n\n                    {/* Time and Day */}\n                    {this.getCollapse(classes, \"Time of Sighting\", this.toggleShow('showTime'), showTime,\n                        <>\n                            Date:\n                            <DatePicker\n                                value={date}\n                                onChange={this.handleDateChange}/> <br/>\n                            Time of Day:\n                            <FilterCheckboxes\n                                filter={timeFilter}\n                                allLabel=\"Any time of day\"\n                                updateValues={this.updateFilterSubsection('timeFilter')}\n                                briefNumber={Object.keys(timeFilter).length - 1}/>\n                        </>\n                    )}\n                    <hr/>\n\n                    {/* Confidence */}\n                    {this.getCollapse(classes, \"Confidence of Sighting\", this.toggleShow('showConfidence'), showConfidence,\n                        <FormControl component=\"fieldset\">\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={<Checkbox\n                                                checked={confidenceFilterActive}\n                                                onChange={this.toggleConfidence}\n                                                checkedIcon={<CheckBoxIntermediateIcon style={{color: '#93C838'}}/>}\n                                                style={{margin: '0px 0px 0px 8px'}}/>}\n                                    label=\"Only show high-confidence sightings\" />\n                            </FormGroup>\n                        </FormControl>\n                    )}\n                </div>\n                <Button variant=\"contained\"\n                    className={classes.resultsButton}\n                    onClick={() => console.log({date, confidenceFilterActive, carnivoreFilter, neighborhoodFilter, timeFilter})}>\n                        See Results\n                </Button>\n            </div>);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        filter: {\n            carnivoreFilter: state.filter.carnivoreFilter,\n            neighborhoodFilter: state.filter.neighborhoodFilter,\n            timeFilter: state.filter.timeFilter,\n            date: state.filter.date,\n            confidenceFilterActive: state.filter.confidenceFilterActive,\n        }\n    }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(FilterDrawer));","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer/SwipeableDrawer';\n\nimport FilterDrawer from './FilterDrawer';\n\nimport '../App.css';\n\nconst styles = {\n  filterContainer: {\n    height: '100vh'\n  }\n};\nclass MobileHeader extends Component {\n  state = {\n    left: false,\n    right: false,\n  };\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n\n  render() {\n    const { history, location, classes} = this.props;\n\n    return (\n      <div style={{ position: 'sticky', top: 0, width: '100%', zIndex: 100 }}>\n        <AppBar position=\"static\" color=\"default\">\n          <div className=\"headerDiv\">\n            <h1 style={{ display: 'table-cell', cursor: 'pointer', marginLeft: 20}}\n                onClick={() => history.push('/')} className=\"header\">Urban Carnivore Spotter</h1>\n            {location.pathname === '/' || location.pathname === '/list' ?\n              <Button className=\"filterButton\" onClick={this.toggleDrawer('right', true)}>Filter</Button> :\n              null\n            }\n            <SwipeableDrawer\n              anchor=\"right\"\n              open={this.state.right}\n              onClose={this.toggleDrawer('right', false)}\n              onOpen={this.toggleDrawer('right', true)}\n            >\n              <div\n                tabIndex={0}\n                role=\"button\"\n                style={{ width: '250px' }}\n              >\n                <div className={classes.filterContainer}>\n                  <FilterDrawer cancel={this.toggleDrawer('right', false)}/>\n                </div>\n              </div>\n            </SwipeableDrawer>\n          </div>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(withRouter(MobileHeader));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport firebase from 'firebase';\nimport FileUploader from 'react-firebase-file-uploader';\n\nclass Uploader extends Component {\n  state = {\n    mediaPaths: [],\n  };\n\n  handleChangeImage = e => {\n    const { target: { files } } = e;\n    const { getMedia } = this.props;\n    const filesToStore = [];\n\n    for (let key in files) {\n      let file = files[key];\n      filesToStore.push(file);\n    }\n\n    getMedia(filesToStore, this.fileUploader);\n\n  };\n\n  handleUploadError = error => {\n    console.error(error);\n  };\n\n  handleUploadSuccess = async filename => {\n    const { passPaths } = this.props;\n    const { mediaPaths } = this.state;\n    await firebase\n      .storage()\n      .ref('images')\n      .child(filename)\n      .getDownloadURL()\n      .then(url => mediaPaths.push(url));\n\n    passPaths(mediaPaths);\n\n  };\n\n  render() {\n    const { acceptType, reference } = this.props;\n\n    return (\n      <div>\n        <FileUploader\n          style={{ display: 'none' }}\n          accept={acceptType}\n          multiple\n          randomizeFilename\n          storageRef={firebase.storage().ref(reference)}\n          onChange={this.handleChangeImage}\n          onUploadError={this.handleUploadError}\n          onUploadSuccess={this.handleUploadSuccess}\n          ref={instance => this.fileUploader = instance}\n        />\n      </div>\n    );\n  }\n}\n\nUploader.propTypes = {\n  acceptType: PropTypes.string.isRequired,\n  reference: PropTypes.string.isRequired\n};\n\nexport default Uploader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport { withStyles } from '@material-ui/core/styles';\nimport Uploader from './Uploader';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n    border: 'dashed 2px gray'\n  },\n  control: {\n    padding: theme.spacing.unit * 2,\n  },\n});\n\n\nclass MediaUpload extends Component {\n\n  getMedia = (dataFromChild, uploader) => {\n    const { uploadMedia } = this.props;\n    uploadMedia(dataFromChild, uploader);\n  };\n\n  getUploaderPaths = paths => {\n    const { getMediaPaths } = this.props;\n    getMediaPaths(paths);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container className={classes.root} spacing={16}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={16}>\n            <Grid key={0} item>\n              <Paper className=\"paper\">\n                <label style={{ cursor: 'pointer' }}>\n                  <CameraAltIcon/>\n                  <AddIcon/>\n                  <p>Photos</p>\n                  <Uploader acceptType=\"images/*\" reference=\"images\" getMedia={this.getMedia}\n                            passPaths={this.getUploaderPaths}/>\n                </label>\n              </Paper>\n            </Grid>\n            <Grid key={1} item>\n              <Paper className=\"paper\">\n                <label style={{ cursor: 'pointer' }}>\n                  <PlayArrowIcon/>\n                  <AddIcon/>\n                  <p>Videos</p>\n                  <Uploader acceptType=\"video/*\" reference=\"videos\" getMedia={this.getMedia}\n                            passPaths={this.getUploaderPaths}/>\n                </label>\n              </Paper>\n            </Grid>\n            <Grid key={2} item>\n              <Paper className=\"paper\">\n                <label style={{ cursor: 'pointer' }}>\n                  <VolumeUpIcon/>\n                  <AddIcon/>\n                  <p>Sound files</p>\n                  <Uploader acceptType=\"audio/*\" reference=\"audio\" getMedia={this.getMedia}\n                            passPaths={this.getUploaderPaths}/>\n                </label>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nMediaUpload.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaUpload);\n","import React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    dragPan: false\n});\n\nclass FormMap extends Component {\n\n  doNotPropagate = e => {\n      e.originalEvent.stopPropagation();\n      e.originalEvent.preventDefault();\n  };\n\n\n  onDragEnd = e => {\n    const { passMapCoordinates } = this.props;\n    const lng = e.lngLat.lng;\n    const lat = e.lngLat.lat;\n\n    passMapCoordinates({ lng, lat });\n  };\n\n  render() {\n    const { centerLng, centerLat } = this.props;\n\n    return (\n      <div>\n        <Map style=\"mapbox://styles/mapbox/streets-v9\"\n             center={{ lng: centerLng, lat: centerLat }}\n             className=\"formMap\"\n             onTouchMove={(map, e) => this.doNotPropagate(e)}\n        >\n          <Layer type=\"circle\"\n                 id=\"marker\"\n                 paint={{\n                   'circle-color': '#ff5200',\n                   'circle-stroke-width': 1,\n                   'circle-stroke-opacity': 1,\n                     'circle-radius': 10\n                 }}>\n            <Feature coordinates={[centerLng, centerLat]} draggable\n                     onDragEnd={e => this.onDragEnd(e)}/>\n          </Layer>\n        </Map>\n\n\n      </div>\n    );\n  }\n}\n\nexport default FormMap;\n","import * as mbxGeocoding from '@mapbox/mapbox-sdk/services/geocoding';\nimport axios from 'axios';\n\nconst ALL_NEIGHBORHOODS_ENDPOINT = 'https://us-central1-seattlecarnivores-edca2.cloudfunctions.net/getNeighborhoods';\n\nexport default class NeighborhoodService {\n    constructor() {\n        this.geocodingService = mbxGeocoding({ accessToken: process.env.REACT_APP_MAPBOX_TOKEN});\n    }\n\n    getNeighborhoodFor = (lat, lng) => {\n        // Create request\n        return this.geocodingService.reverseGeocode({\n            query: [lng, lat],\n            types: ['neighborhood']\n        })\n            .send()\n            .then(response => {\n                const neighborhoods = response.body.features;\n                if (neighborhoods && neighborhoods.length > 0) {\n                    return neighborhoods[0].text;\n                }\n                return \"Unknown\";\n            });\n    }\n\n    static getAllNeighborhoods = () => {\n        return axios.get(ALL_NEIGHBORHOODS_ENDPOINT)\n            .then(neighborhoods => neighborhoods.data.sort());\n    }\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport DatePicker from 'react-datepicker';\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport LoadingOverlay from 'react-loading-overlay';\n\nimport MediaUpload from './MediaUpload';\nimport FormMap from './FormMap';\nimport NeighborhoodService from '../services/NeighborhoodService';\n\nconst addReportUrl = 'https://us-central1-seattlecarnivores-edca2.cloudfunctions.net/addReport';\n\n// Options\nconst speciesLst = ['Black Bear', 'Bobcat', 'Cougar/Mountain Lion', 'Coyote', 'Opossum',\n  'Raccoon', 'River Otter', 'Other/Unknown'];\nconst confidenceLevels = ['Not at all confident', 'About 25% confident', 'About 50% confident', 'About 75% confident',\n  'More than 75% confident', '100% confident'];\nconst reactions = ['Stayed quiet', 'Shouted/made noise', 'Other'];\nconst dogSizes = ['Small (up to 20lbs)', 'Medium(20-60lbs)', 'Large(60+lbs)', 'Mixed group'];\nconst leashOptions = ['Leashed', 'Unleashed', 'Both'];\nconst animalBehaviors = ['Was eating', 'Urinating', 'Defecating'];\nconst vocalizations = ['Barking', 'Howling', 'Growling', 'Other'];\nconst carnivoreResponses = ['Animal did not seem to notice observer', 'Animal ran away',\n  'Animal stood ground-seemed interested in observer', 'Animal stood ground - seemed uninterested in observer',\n  'Animal moved towards observer, pets or livestock, and not simply to access an escape route'];\nconst conflictOptions = ['Animal made physical contact with pet or livestock',\n  'Animal made physical contact with human(s)', 'Interacted with human-related item or place (e.g., trash can, birdfeeder, fence/yard, attic)'];\nconst counts = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n// constants\nconst THANKS_FOR_SUBMITTING = 'Thank you for your submission! Please note that the system will display your observation on the map after a period of one week.';\nconst ERROR_ON_SUBMISSION = 'Something went wrong during your submission. Please try again later.';\nconst neighborhoodService = new NeighborhoodService();\n\nclass Form extends Component {\n  state = {\n    species: '',\n    timestamp: new Date(),\n    mapLat: 47.608013,\n    mapLng: -122.335167,\n    confidence: '',\n    animalFeatures: '',\n    numberOfAdultSpecies: '',\n    numberOfYoungSpecies: '',\n    numberOfAdults: '',\n    numberOfChildren: '',\n    reaction: '',\n    reactionDescription: '',\n    numberOfDogs: '',\n    dogSize: '',\n    onLeash: '',\n    animalBehavior: '',\n    animalEating: '',\n    vocalization: '',\n    vocalizationDesc: '',\n    carnivoreResponse: '',\n    carnivoreConflict: '',\n    conflictDesc: '',\n    contactEmail: '',\n    contactName: '',\n    contactPhone: '',\n    generalComments: '',\n    neighborhood: '',\n    media: null,\n    mediaPaths: [],\n    thanksMessage: null,\n    submitting: false,\n    permissionOpen: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.fileUploader = React.createRef();\n  }\n\n  componentDidMount = () => {\n    // The neighborhood is initialized to the empty string, but we want to have a neighborhood for our\n    // initial location!\n    neighborhoodService.getNeighborhoodFor(this.state.mapLat, this.state.mapLng)\n      .then(neighborhood => this.setState({neighborhood}));\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  getMapCoordinates = dataFromMap => {\n    this.setState({ mapLat: dataFromMap.lat, mapLng: dataFromMap.lng });\n    neighborhoodService.getNeighborhoodFor(dataFromMap.lat, dataFromMap.lng)\n      .then(neighborhood => this.setState({neighborhood}));\n  };\n\n  handleSubmit = () => {\n    let {thanksMessage, submitting, permissionOpen, ...report} = this.state;\n    delete report['media'];\n    this.setState({submitting: true});\n    return axios.post(addReportUrl, report)\n      .then(response => {\n        this.setState({submitting: false});\n        if (response.status === 200) {\n          this.setState({thanksMessage: THANKS_FOR_SUBMITTING}); // Open the submission recieved dialog\n        } else {\n          this.setState({thanksMessage: ERROR_ON_SUBMISSION});\n        }\n      });\n  };\n\n  handleUploadSuccess = files => {\n    this.setState({ mediaPaths: files });\n  };\n\n  handleTimestampChange = timestamp => {\n    this.setState({\n      timestamp: new Date(timestamp)\n    });\n  };\n\n  setMedia = (dataFromChild, uploader) => {\n    this.fileUploader = uploader;\n    this.setState({ media: dataFromChild });\n  };\n\n  uploadMedia = () => {\n    const { media } = this.state;\n    if (media) {\n      media.forEach(file => this.fileUploader.startUpload(file));\n    }\n  };\n\n  handlePermissionResponse = (agree) => {\n    this.setState({permissionOpen: false});\n    if (agree) {\n      this.uploadMedia();\n    }\n  }\n\n  handleClose = () => {\n    const { history, handleDrawerState, fromDrawer } = this.props;\n    this.setState({thanksMessage: null}, () => {\n      history.push('/');\n      if (fromDrawer) {\n        handleDrawerState(false);\n      }\n    });\n  }\n\n  render() {\n    const {\n      mapLat, mapLng, timestamp, animalFeatures, species, confidence, numberOfAdultSpecies,\n      numberOfYoungSpecies, numberOfAdults, numberOfChildren, reaction, reactionDescription, numberOfDogs, dogSize,\n      onLeash, animalBehavior, animalEating, vocalization, vocalizationDesc, carnivoreResponse, carnivoreConflict,\n      conflictDesc, contactName, contactEmail, contactPhone, generalComments, mediaPaths, thanksMessage, submitting,\n      permissionOpen, neighborhood\n    } = this.state;\n    return (\n      <LoadingOverlay active={submitting} spinner text='Submitting...'>\n      <div>\n        <h2>Report a carnivore sighting</h2>\n        <ValidatorForm onError={errors => console.log(errors)}\n                       onSubmit={this.handleSubmit}\n                       className=\"formWizardBody\" autoComplete=\"off\">\n          <div className=\"formItem\">\n            <h4>When did you see the animal?</h4>\n            <DatePicker\n              selected={timestamp}\n              onChange={this.handleTimestampChange}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={15}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              timeCaption=\"time\"\n            />\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Identify the location of your sighting</h4>\n            <p> Drag the point on the map to mark your sighting</p>\n\n            <FormMap passMapCoordinates={this.getMapCoordinates}\n                     centerLng={mapLng} centerLat={mapLat}/>\n            {neighborhood ? <p>{neighborhood}</p> : null}\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Which animal did you see?</h4>\n            <SelectValidator\n              value={species}\n              variant=\"outlined\"\n              label=\"Species\"\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['this field is required']}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'species',\n                id: 'species',\n              }}\n            >\n              {speciesLst.map((type, idx) => <MenuItem key={idx} value={type}>{type}</MenuItem>)}\n            </SelectValidator>\n          </div>\n\n          <div className=\"formItem\">\n            <h4>What were some key features about the animal(s)? </h4>\n            <TextValidator\n              label=\"Describe (limit 80 char)\"\n              multiline\n              style={{ minWidth: '300px', backgroundColor: 'transparent' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              rows=\"4\"\n              value={animalFeatures}\n              inputProps={{\n                name: 'animalFeatures',\n                id: 'animalFeatures',\n                maxLength: 80,\n              }}\n              onChange={this.handleChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </div>\n\n          <div className=\"formItem\">\n            <h4>How confident are you that you have identified the animal correctly?</h4>\n            <SelectValidator\n              value={confidence}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Confidence\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'confidence',\n                id: 'confidence',\n              }}\n            >\n              {confidenceLevels.map((level, idx) => <MenuItem key={idx} value={level}>{level}</MenuItem>)}\n            </SelectValidator>\n          </div>\n\n          <div className=\"formItem\">\n            <h4>How many of the species did you see?</h4>\n            <div>\n              <SelectValidator\n                value={numberOfAdultSpecies}\n                style={{ minWidth: '300px', marginBottom: '15px' }}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                variant=\"outlined\"\n                label=\"Number of Adult\"\n                onChange={this.handleChange}\n                inputProps={{\n                  name: 'numberOfAdultSpecies',\n                  id: 'numberOfAdultSpecies',\n                }}\n              >\n                {counts.map(idx => <MenuItem key={idx} value={idx}>{idx === 9 ? '9+' : idx.toString()}</MenuItem>)}\n              </SelectValidator>\n            </div>\n            <SelectValidator\n              value={numberOfYoungSpecies}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Number of Young\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'numberOfYoungSpecies',\n                id: 'numberOfYoungSpecies',\n              }}\n            >\n              {counts.map(idx => <MenuItem key={idx} value={idx}>{idx === 9 ? '9+' : idx.toString()}</MenuItem>)}\n            </SelectValidator>\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Describe the animal(s) behavior</h4>\n            <SelectValidator\n              value={animalBehavior}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Animal Behavior\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'animalBehavior',\n                id: 'animalBehavior',\n              }}\n            >\n              {animalBehaviors.map((behavior, idx) => <MenuItem key={idx} value={behavior}>{behavior}</MenuItem>)}\n            </SelectValidator>\n\n            {animalBehavior === 'Was eating' ?\n              <TextValidator\n                label=\"Describe (limit 80 char)\"\n                multiline\n                style={{ minWidth: '300px' }}\n                validators={['required']}\n                errorMessages={['This field is required']}\n                rows=\"4\"\n                value={animalEating}\n                inputProps={{\n                  name: 'animalEating',\n                  id: 'animalEating',\n                  maxLength: 80\n                }}\n                onChange={this.handleChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n\n              /> : null\n            }\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Was/were the animal(s) making any noises?</h4>\n            <SelectValidator\n              value={vocalization}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Vocalization\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'vocalization',\n                id: 'vocalization',\n              }}\n            >\n              {vocalizations.map((type, idx) => <MenuItem key={idx} value={type}>{type}</MenuItem>)}\n            </SelectValidator>\n\n            {vocalization === 'Other' ?\n              <TextValidator\n                label=\"Describe (limit 80 char)\"\n                multiline\n                required\n                rows=\"4\"\n                value={vocalizationDesc}\n                inputProps={{\n                  name: 'vocalizationDesc',\n                  id: 'vocalizationDesc',\n                  maxLength: 80\n                }}\n                onChange={this.handleChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n\n              /> : null\n            }\n          </div>\n\n          <div className=\"formItem\" id=\"carnivoreResponse\">\n            <h4>How did the carnivore respond to you and/or your pets/livestock?</h4>\n            <SelectValidator\n              value={carnivoreResponse}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Carnivore Response\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'carnivoreResponse',\n                id: 'carnivoreResponse',\n              }}\n            >\n              {carnivoreResponses.map((type, idx) =>\n                <MenuItem\n                  style={{ whiteSpace: 'normal', marginBottom: '10px' }}\n                  key={idx}\n                  value={type}>{type}</MenuItem>)}\n            </SelectValidator>\n          </div>\n\n          <div className=\"formItem\" id=\"carnivoreConflict\">\n            <h4>Was there an interaction or conflict between you, your pets/livestock or other items and the\n              carnivore?</h4>\n            <SelectValidator\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              value={carnivoreConflict}\n              variant=\"outlined\"\n              label=\"Carnivore Conflict\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'carnivoreConflict',\n                id: 'carnivoreConflict',\n              }}\n            >\n              {conflictOptions.map((type, idx) =>\n                <MenuItem\n                  style={{ whiteSpace: 'normal', marginBottom: '10px' }}\n                  key={idx}\n                  value={type}>{type}</MenuItem>)}\n            </SelectValidator>\n\n            {\n              conflictOptions.indexOf(carnivoreConflict) === 0 || conflictOptions.indexOf(carnivoreConflict) === 2 ?\n                <TextValidator\n                  label=\"Describe (limit 80 char)\"\n                  multiline\n                  style={{ minWidth: '300px' }}\n                  validators={['required']}\n                  errorMessages={['This field is required']}\n                  rows=\"4\"\n                  value={conflictDesc}\n                  inputProps={{\n                    name: 'conflictDesc',\n                    id: 'conflictDesc',\n                    maxLength: 80\n                  }}\n                  onChange={this.handleChange}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                /> : null\n\n            }\n          </div>\n\n\n          <div className=\"formItem\">\n            <h4>Upload pictures, videos or sound files</h4>\n            <MediaUpload uploadMedia={this.setMedia} getMediaPaths={this.handleUploadSuccess}/>\n            {mediaPaths.length > 0 ? <p>{mediaPaths.length} files uploaded</p> : null}\n          </div>\n          {/* Setting permissionOpen to true opens the permission dialog, where clicking \"agree\" actually calls the media upload function */}\n          <Button size=\"small\" color=\"secondary\" variant=\"contained\" onClick={() => this.setState({ permissionOpen: true })}>Upload</Button>\n\n          <div className=\"formItem\">\n            <h4>How many humans were in your group?</h4>\n            <SelectValidator\n              value={numberOfAdults}\n              style={{ minWidth: '300px', marginBottom: '15px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Number of Adults\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'numberOfAdults',\n                id: 'numberOfAdults',\n              }}\n            >\n              {counts.map(idx => <MenuItem key={idx} value={idx}>{idx === 9 ? '9+' : idx.toString()}</MenuItem>)}\n            </SelectValidator>\n            <p className=\"childrenAgeText\">Children up to 9 years old</p>\n            <SelectValidator\n              value={numberOfChildren}\n              style={{ minWidth: '300px', marginTop: '5px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Number of Children\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'numberOfChildren',\n                id: 'numberOfChildren',\n              }}\n            >\n              {counts.map(idx => <MenuItem key={idx} value={idx}>{idx === 9 ? '9+' : idx.toString()}</MenuItem>)}\n            </SelectValidator>\n          </div>\n\n          <div className=\"formItem\">\n            <h4>How did you react to the species?</h4>\n            <SelectValidator\n              value={reaction}\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Reaction\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'reaction',\n                id: 'reaction',\n              }}\n            >\n              {reactions.map((reaction, idx) => <MenuItem key={idx} value={reaction}>{reaction}</MenuItem>)}\n            </SelectValidator>\n            {reaction === 'Other' ?\n              <TextValidator\n                label=\"Describe (limit 80 char)\"\n                multiline\n                rows=\"4\"\n                value={reactionDescription}\n                inputProps={{\n                  name: 'reactionDescription',\n                  id: 'reactionDescription',\n                  maxLength: 80,\n                }}\n                onChange={this.handleChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              /> : null}\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Any dog(s) present in your group?</h4>\n            <SelectValidator\n              value={numberOfDogs}\n              select\n              style={{ minWidth: '300px' }}\n              validators={['required']}\n              errorMessages={['This field is required']}\n              variant=\"outlined\"\n              label=\"Number of Dogs\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'numberOfDogs',\n                id: 'numberOfDogs',\n              }}\n            >\n              {counts.map(idx => <MenuItem key={idx} value={idx}>{idx.toString()}</MenuItem>)}\n            </SelectValidator>\n            {numberOfDogs > 0 ?\n              <div>\n                <SelectValidator\n                  value={dogSize}\n                  style={{ minWidth: '300px' }}\n                  validators={['required']}\n                  errorMessages={['This field is required']}\n                  variant=\"outlined\"\n                  label=\"Size of dog(s)\"\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'dogSize',\n                    id: 'dogSize',\n                  }}\n                >\n                  {dogSizes.map((size, idx) => <MenuItem key={idx} value={size}>{size}</MenuItem>)}\n                </SelectValidator>\n                <SelectValidator\n                  value={onLeash}\n                  style={{ minWidth: '300px' }}\n                  validators={['required']}\n                  errorMessages={['This field is required']}\n                  variant=\"outlined\"\n                  label=\"On Leash\"\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'onLeash',\n                    id: 'onLeash',\n                  }}\n                >\n                  {leashOptions.map((option, idx) => <MenuItem key={idx} value={option}>{option}</MenuItem>)}\n                </SelectValidator>\n              </div> : null\n            }\n\n          </div>\n\n          <div className=\"formItem\">\n            <h4>Contact Information</h4>\n            <p> This information will not be shared</p>\n            <div>\n              <TextValidator\n                value={contactName}\n                style={{ minWidth: '300px', marginBottom: '15px' }}\n                variant=\"outlined\"\n                label=\"Name\"\n                onChange={this.handleChange}\n                inputProps={{\n                  name: 'contactName',\n                  id: 'contactName',\n                }}\n              >\n              </TextValidator>\n            </div>\n            <div>\n              <TextValidator\n                value={contactEmail}\n                variant=\"outlined\"\n                label=\"Email\"\n                style={{ minWidth: '300px', marginBottom: '15px' }}\n                onChange={this.handleChange}\n                validators={['isEmail']}\n                errorMessages={['Email is not valid']}\n                inputProps={{\n                  name: 'contactEmail',\n                  id: 'contactEmail',\n                }}\n              >\n              </TextValidator>\n            </div>\n            <TextValidator\n              value={contactPhone}\n              variant=\"outlined\"\n              label=\"Phone Number\"\n              style={{ minWidth: '300px' }}\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'contactPhone',\n                id: 'contactPhone',\n              }}\n            >\n            </TextValidator>\n          </div>\n\n          <div className=\"formItem\">\n            <h4>General Comments</h4>\n            <TextValidator\n              value={generalComments}\n              style={{ minWidth: '300px' }}\n\n              variant=\"outlined\"\n              label=\"General Comments\"\n              onChange={this.handleChange}\n              inputProps={{\n                name: 'generalComments',\n                id: 'generalComments',\n              }}\n            >\n            </TextValidator>\n          </div>\n          <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n            Submit\n          </Button>\n        </ValidatorForm>\n        {/* \"Thanks for submitting\" dialog */}\n        <Dialog\n          open={thanksMessage}\n          onClose={this.handleClose}\n        >\n          <DialogContent>\n            <DialogContentText>\n              {thanksMessage}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n        {/* Permission dialog */}\n        <Dialog\n          open={permissionOpen}\n          onClose={() => this.setState({ permissionOpen: false })}\n        >\n          <DialogContent>\n            <DialogContentText>\n              Is it ok if we store the images and audio that you've uploaded? If you say no, we will not be able to show your pictures to other users.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handlePermissionResponse(false)} color=\"primary\">\n              No, don't use my media\n            </Button>\n            <Button onClick={() => this.handlePermissionResponse(true)} color=\"primary\">\n              Yes, use my media\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default withRouter(Form);\n","import React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MapIcon from '@material-ui/icons/Map';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Form from './Form';\nimport { withRouter } from \"react-router\";\n\nconst styles = theme => ({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: '100%',\n  },\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Footer extends Component {\n  state = {\n    open: false,\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    if (window.innerWidth < 768 && location.pathname === '/reports/create') {\n      this.handleDrawer(true);\n    }\n  }\n\n  toggleDrawer = drawerState => () => {\n    const { history } = this.props;\n    const { open } = this.state;\n\n    this.setState({\n      open: drawerState\n    }, () => {\n      if (open) {\n        history.push('/');\n      } else {\n        history.push('/reports/create');\n      }\n    });\n  };\n\n  handleDrawer = state => {\n    this.setState({\n      open: state\n    });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className=\"footerIconDiv\">\n        <Button className=\"footerIcons\" style={{ float: 'left', marginLeft: '50px' }}>\n          <MapIcon style={{ color: 'gray' }}/>\n          <p>Explore</p>\n        </Button>\n        <Fab color=\"primary\" aria-label=\"Add\" className=\"plusButton\" size=\"large\" onClick={this.toggleDrawer(!open)}>\n          <AddIcon/>\n        </Fab>\n        {/*<SwipeableDrawer*/}\n        <Drawer\n          anchor=\"bottom\"\n          open={open}\n          onClose={this.toggleDrawer(!open)}\n          onOpen={this.toggleDrawer(!open)}\n          className=\"formWizard\"\n        >\n          <div tabIndex={0}>\n            <div>\n              <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n                <ClearIcon onClick={this.toggleDrawer(!open)}/>\n              </Fab>\n            </div>\n            <Form handleDrawerState={this.handleDrawer} fromDrawer/>\n          </div>\n        {/*</SwipeableDrawer>*/}\n        </Drawer>\n        <Button className=\"footerIcons\" style={{ float: 'right', marginRight: '50px' }}>\n          <SettingsIcon style={{ color: 'gray' }}/>\n          <p>Resources</p>\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Footer));\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\n\n// TODO find something better\nconst DEFAULT_IMAGE_URL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/2010-brown-bear.jpg/200px-2010-brown-bear.jpg\";\n\nconst styles = theme => ({\n  info: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    flex: 1,\n    textAlign: 'left'\n  },\n  allContent: {\n    display: 'flex',\n    padding: 0\n  }\n});\n\n/**\n * Get a string for a timestamp in the format that Cloud Firestore sends us.\n * Time should be an object with _nanoseconds and _seconds as fields.\n */\nconst timeToString = time => {\n  const date = new Date(time);\n  return `${date.toDateString()} ${date.getHours()}:${date.getMinutes()}`;\n};\n\nconst ListCard = props => {\n  const { classes, report } = props;\n  return <Card className=\"card\">\n    <CardContent className={classes.allContent}>\n      <CardMedia className=\"cardPicture\"\n                 image={report.data.mediaPaths && report.data.mediaPaths.length>0 ? report.data.mediaPaths[0] : DEFAULT_IMAGE_URL}\n      />\n      <CardContent className={classes.info}>\n        <Typography variant={'h3'}>{report.data.species.toUpperCase()}</Typography>\n        <Typography variant={'subtitle1'}>{timeToString(report.data.timestamp)}</Typography>\n        <Typography style={{ color: 'grey' }}>{report.data.mapLat},{report.data.mapLng}</Typography>\n        <li>\n          <Link to={`/reports/${report.id}`}>See Report</Link>\n        </li>\n      </CardContent>\n    </CardContent>\n  </Card>\n};\n\nexport default withStyles(styles)(ListCard);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListCard from '../components/ListCard';\nimport { dataMatchesFilter } from '../services/FilterService';\nimport FilterDrawer from './FilterDrawer';\n\nconst getReports = 'https://us-central1-seattlecarnivores-edca2.cloudfunctions.net/getReports';\n\nclass ListView extends Component {\n  state = {\n    reports: null\n  };\n\n  componentDidMount() {\n    axios.get(getReports)\n      .then(reports => {\n        this.setState({ reports: reports.data });\n      })\n      .catch(error => error);\n  }\n\n  render() {\n    const { reports } = this.state;\n    const { filter, isMobile } = this.props;\n    if (!reports) {\n      return <CircularProgress/>;\n    }\n    return (\n      <div className=\"backgroundCardContainer\">\n        { isMobile ? null :\n          <div className=\"filterContainer\">\n            <FilterDrawer />\n          </div>\n        }\n        <div className=\"cardContainer\">\n          {reports.filter(report => dataMatchesFilter(report, filter))\n            .map((report) => <ListCard report={report} key={report.id}/>)}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n      isMobile: state.isMobile,\n      filter: state.filter\n  };\n}\nexport default connect(mapStateToProps)(ListView);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { CircularProgress, Toolbar } from \"@material-ui/core\";\nimport { KeyboardArrowLeft } from \"@material-ui/icons\";\n\nimport ImageGallery from 'react-image-gallery';\n\nconst getReport = 'https://us-central1-seattlecarnivores-edca2.cloudfunctions.net/getReport';\n\nclass ReportViewer extends Component {\n  state = {\n    report: null,\n  };\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n\n    axios.get(getReport + `?id=${id}`)\n      .then(report => {\n        this.setState({ report: report.data });\n      })\n      .catch(error => error);\n  }\n\n  render() {\n    const { history } = this.props;\n    const { report } = this.state;\n\n    if (!report) {\n      return <CircularProgress/>\n    }\n\n    const date = new Date(report.timestamp);\n    let media = [];\n\n    if (report.mediaPaths !== undefined && report.mediaPaths.length > 0) {\n      report.mediaPaths.map(med => {\n        media.push({ original: med, thumbnail: med });\n      })\n    }\n\n    //Need to replace with actual neighborhood once we have those polygons\n    return (\n      <div className=\"reportViewer\">\n        <Toolbar className=\"reportViewerToolbar\">\n          <Button className=\"backToExplore\" onClick={() => history.goBack()}> <KeyboardArrowLeft/>Back</Button>\n          <h4>{report.species.toUpperCase()}</h4>\n        </Toolbar>\n        <Card className=\"reportCard\">\n          {media ?\n            <ImageGallery items={media}\n                          showBullets={true} showIndex={true}\n                          showThumbnails={false} showVideo={true}/> : null}\n          <div style={{ backgroundColor: 'white', textAlign: 'left', paddingLeft: '30px' }}>\n            <p><strong>Date:</strong> {new Date(report.timestamp).toDateString()}</p>\n            <p><strong>Time of Sighting:</strong> {date.getHours()}:{date.getMinutes()}</p>\n            <p><strong>Neighborhood:</strong> NEIGHBORHOOD HERE</p>\n            <p><strong>Confidence:</strong> {report.confidence}</p>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReportViewer);\n","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport {KeyboardArrowLeft} from \"@material-ui/icons\";\nimport Button from \"./ReportViewer\";\n\nconst DEFAULT_IMAGE_URL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/2010-brown-bear.jpg/200px-2010-brown-bear.jpg\";\n\nconst timeToString = time => {\n    const date = new Date(time);\n    return `${date.toDateString()} ${date.getHours()}:${date.getMinutes()}`;\n};\n\n\n/* TODO: Should be updated with neighborhood info */\nclass PointTooltip extends Component {\n    render() {\n        const { report } = this.props;\n        return <div >\n            <img width = {40} src = {report.data.mediaPaths && report.data.mediaPaths.length>0 ? report.data.mediaPaths[0] : DEFAULT_IMAGE_URL}  />\n            <div className = \"caption\">{report.data.species}</div>\n            <div className = \"caption\">Date & Time:</div>\n            <div>{timeToString(report.data.timestamp)}</div>\n            <div className = \"caption\">Location: {report.data.mapLat},{report.data.mapLng}</div>\n            <li>\n                <Link to={`/reports/${report.id}`}>See Report</Link>\n            </li>\n        </div>\n    }\n};\n\nexport default PointTooltip;\n","import React, { Component } from 'react';\nimport ReactMapboxGl, {Layer, Feature, Popup} from 'react-mapbox-gl';\nimport axios from \"axios\";\nimport PointTooltip from '../components/PointTooltip';\nimport FilterDrawer from './FilterDrawer';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { dataMatchesFilter } from '../services/FilterService';\nimport { getColorForSpecies } from '../services/ColorService';\n\nconst Map2 = ReactMapboxGl({\n    accessToken: process.env.REACT_APP_MAPBOX_TOKEN\n});\n\nconst getReports = \"https://us-central1-seattlecarnivores-edca2.cloudfunctions.net/getReports\";\n\nconst styles = {\n    filterContainer: {\n        backgroundColor: 'white',\n        position: 'fixed',\n        left: '5%',\n        top: '15%',\n        width: 250,\n        zIndex: 1,\n        height: '60%',\n        boxShadow: '2px 2px 2px'\n    }\n}\nclass MapView extends Component {\n    state = {\n        viewport: {\n            center: [-122.335167, 47.608013],\n            zoom: [10],\n        },\n        popupInfo: null,\n        reports: null,\n    };\n\n    componentDidMount() {\n        const url = getReports+\"?mapLat=47.608013&mapLng=-122.335167\";\n        axios.get(url)\n            .then(reports => {\n                this.setState({ reports: reports.data});\n            })\n            .catch(error => error);\n    }\n\n    onMoveEnd = e => {\n        let center = e.getCenter();\n        const url = getReports+\"?mapLat=\"+center.lat+\"&mapLng=\"+center.lng;\n        axios.get(url)\n            .then(reports => {\n                reports.data!==\"No data!\" ? this.setState({ reports: reports.data}):\n                    this.setState({reports: null})\n            })\n            .catch(error => error);\n\n    };\n\n    renderPopup() {\n        const {popupInfo} = this.state;\n        if(popupInfo)\n        {\n            return (\n                <Popup tipSize={5}\n                       anchor=\"bottom\"\n                       coordinates={[popupInfo.data.mapLng, popupInfo.data.mapLat]}\n                       className=\"cardContainer\"\n                       onMouseLeave={() => this.setState({popupInfo: false})}>\n                    <PointTooltip className=\"mapboxgl-popup-content\" report={popupInfo} key={popupInfo.id}/>\n                </Popup>\n            );\n        }\n    }\n\n    render() {\n        const {classes, isMobile, filter} = this.props;\n        const {reports} = this.state;\n        if (!reports) {\n            return <Map2 style=\"mapbox://styles/mapbox/streets-v9\"\n                         className=\"map\"\n                         {...this.state.viewport}\n                         onMoveEnd={e => this.onMoveEnd(e)}\n            />\n        }\n        return (\n            <div className=\"mapContainer \">\n                { !isMobile && <div className={classes.filterContainer}>\n                    <FilterDrawer/>\n                </div>}\n                <Map2 style=\"mapbox://styles/mapbox/streets-v9\"\n                      className=\"map\"\n                      {...this.state.viewport}\n                      onMoveEnd={e => this.onMoveEnd(e)}\n                >\n                    {this.renderPopup()}\n                    {reports.filter(report => dataMatchesFilter(report, filter))\n                        .map(report => (\n                            <Layer type=\"circle\"\n                                key ={report.id}\n                                paint={{'circle-color': getColorForSpecies(report.data.species.toLowerCase())}}>\n                                <Feature  key ={report.id} coordinates={[report.data.mapLng, report.data.mapLat]}\n                                        onClick={() => this.setState({popupInfo: report})}\n                                />\n                            </Layer>))}\n                </Map2>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isMobile: state.isMobile,\n        filter: state.filter\n    };\n}\nexport default connect(mapStateToProps)(withStyles(styles)(MapView));\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport raccoon from '../assets/Raccoon.svg';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst styles = {\n    oops: {\n        color: '#8acc25',\n        fontSize: '64px',\n    },\n    text: {\n        fontSize: 20,\n        marginLeft: '20%',\n        marginRight: '20%',\n    },\n    raccoon: {\n        position: 'fixed',\n        bottom: 0,\n        transform: 'translateX(-50%)',\n        zIndex: -1,\n        maxHeight: '40%',\n        minHeight: '15%',\n    },\n    raccoonMobile: {\n        position: 'fixed',\n        bottom: '10%',\n        transform: 'translateX(-50%)',\n        zIndex: -1,\n        maxHeight: '30%',\n        minHeight: '15%',\n    },\n    button: {\n        backgroundColor: '#8acc25',\n        color: 'white',\n    },\n    container: {\n        zIndex: 0,\n    },\n    background: {\n        backgroundColor: '#f4f4f4',\n        minHeight: '100vh',\n        zIndex: -100,\n        position: 'fixed',\n        top: 0,\n    }\n};\n\nconst NotFound = (props) => {\n    const { classes, history, isMobile } = props;\n    return <>\n        <div className={classes.background}/>\n        <div className={classes.container}>\n            <h1 className={classes.oops}><strong>oops!</strong></h1>\n            <h2>404 - Page not found</h2>\n            <p className={classes.text}>Sorry, the page you are looking for could not be found.</p>\n            <Button\n                variant=\"contained\"\n                onClick={() => history.push('/')}\n                className={classes.button}\n                size=\"large\">Back to Map</Button>\n            <br/>\n            <img src={raccoon} alt=\"Raccoon\" className={isMobile ? classes.raccoonMobile : classes.raccoon}/>\n        </div>\n    </>\n};\n\nconst mapStateToProps = (state) => {\n    return { isMobile: state.isMobile };\n};\n\nexport default withRouter(withStyles(styles)(connect(mapStateToProps)(NotFound)));\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Form from './Form';\nimport ListView from './ListView';\nimport MapView from \"./MapView\";\nimport ReportViewer from \"./ReportViewer\";\nimport NotFound from './NotFound';\n\nconst Main = () => (\n  <main className=\"Main\">\n    <Switch>\n      <Route exact path=\"/\" render={() => <MapView/>}/>\n      <Route exact path=\"/reports/create\" component={Form}/>\n      <Route exact path=\"/list\" component={ListView}/>\n      <Route exact path=\"/reports/:id\" component={ReportViewer}/>\n      <Route component={NotFound}/>\n    </Switch>\n  </main>\n);\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport DesktopHeader from \"./components/DesktopHeader\";\nimport Header from './components/MobileHeader';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport { connect } from 'react-redux';\nimport { setMobile, updateAllNeighborhoods } from './store/actions';\nimport NeighborhoodService from './services/NeighborhoodService';\n\nimport './App.css';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile);\n    NeighborhoodService.getAllNeighborhoods()\n      .then(allNeighborhoods => updateAllNeighborhoods(allNeighborhoods));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkIfMobile);\n  }\n\n  checkIfMobile = () => {\n    setMobile(window.innerWidth < 768);\n  };\n\n  render() {\n    const {isMobile} = this.props;\n    return (\n      <div className=\"App\">\n        {isMobile ? <Header/> : <DesktopHeader/>}\n        <Main/>\n        {isMobile ? <Footer/> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {isMobile: state.isMobile};\n};\n\nexport default withRouter(connect(mapStateToProps)(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render((\n    <BrowserRouter basename=\"urban-carnivore-spotter\">\n      <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n          <App/>\n        </FirebaseContext.Provider>\n      </Provider>\n    </BrowserRouter>),\n  document.getElementById('root'));\n\n\n"],"sourceRoot":""}